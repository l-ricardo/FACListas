.data
quebralinha: .asciz "\n"
simbPos: .asciz "+"
simbNeg: .asciz "-"
comecoHexa: .asciz"0x00"
.text
main:
 li a7,6
 ecall
 
 #print float
 li a7,2
 ecall 
 
 #print sinal usando bit de sinal
 fmv.x.s t0,f10
 
 li a7,4
 la a0,quebralinha
 ecall
 
 srli t1,t0,31
 
 beqz t1,positivo
 j negativo
 voltaSimb:
 
 li a7,4
 la a0,quebralinha
 ecall
 
 #print expoente
 
 slli t1,t0,1
 srli t1,t1,24
 
 addi t1,t1,-127
 
 li a7,1
 mv a0,t1
 ecall
 
 li a7,4
 la a0,quebralinha
 ecall
 
 #print hexa
 slli s1,t0,9
 srli s1,s1,9
 
 li s2,28
 li s3,4
 li s4,8
 li t6,0 
 li t1,10
 
 li a7,4
 la a0,comecoHexa
 ecall
 
loopHexa:
 beq s3,s2,exit
 addi s3,s3,4
 
 sll s6,s1,s3
 srli s6,s6,28
 
 bge s6,t1,convertePrintaHexa
 
 li a7,1
 mv a0,s6
 ecall
 voltaPrintHexa:
 
 j loopHexa
 
convertePrintaHexa:
 slti t2,s6,11 
 bnez t2,printA
 slti t2,s6,12 
 bnez t2,printB
 slti t2,s6,13 
 bnez t2,printC
 slti t2,s6,14 
 bnez t2,printD
 slti t2,s6,15 
 bnez t2,printE
 slti t2,s6,16 
 bnez t2,printF
 
printA:
 li t2,65
 
 li a7,11
 mv a0,t2
 ecall
 j voltaPrintHexa
printB:
 li t2,66
 
 li a7,11
 mv a0,t2
 ecall
 j voltaPrintHexa
printC:
 li t2,67
 
 li a7,11
 mv a0,t2
 ecall
 j voltaPrintHexa
printD:
 li t2,68
 
 li a7,11
 mv a0,t2
 ecall
 j voltaPrintHexa
printE:
 li t2,69
 
 li a7,11
 mv a0,t2
 ecall
 j voltaPrintHexa
printF:
 li t2,70
 
 li a7,11
 mv a0,t2
 ecall
 j voltaPrintHexa
 
positivo:

 li a7,4
 la a0,simbPos
 ecall
 j voltaSimb
 
negativo:

 li a7,4
 la a0,simbNeg
 ecall
 j voltaSimb
  
exit:
    # Imprime a \n na tela
    li a7, 4                # "load immediate" -> O registrador a7 recebe o número 4
    la a0, quebralinha              # "load address" -> Carrega o endereço da mensagem em a0
    ecall                   # Realiza a ação registrada em a7, usando a0 como recipiente (4: imprime string guardada em a0)            

  #li a7,10
# ecall